{"ast":null,"code":"var _jsxFileName = \"F:\\\\Github\\\\Tap-into-the-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Header from \"./header\";\nimport Footer from \"./Footer\";\nimport Todos from \"./Todos\";\nimport TodoItem from \"./Todoitem\";\nimport About from \"./About\";\nimport React, { useEffect, useState } from \"react\";\nimport Addtodo from \"./Addtodo\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let initTodo;\n\n  if (localStorage.getItem(\"todos\") === null) {\n    initTodo = [];\n  } else {\n    initTodo = JSON.parse(localStorage.getItem(\"todos\"));\n  }\n\n  const ondelete = todo => {\n    console.log(\"I am getting deleted of todo\", todo); // let idx=todos.indexOf(todo)\n    // todos.splice(idx,1);    //  in react splice doesn't work , dom will not get updated like this , to do this we have to use state hooks\n\n    settodos(todos.filter(e => {\n      return e !== todo;\n    }));\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const addtodo = (title, desc) => {\n    console.log(\"I am adding this todo\", title, desc);\n    let sno;\n\n    if (todos.length === 0) {\n      sno = 0;\n    } else {\n      sno = todos[todos.length - 1].sno + 1;\n    }\n\n    const mytodo = {\n      // for changing the newly entered title and desc , basically updating title and desc\n      sno: sno,\n      title: title,\n      desc: desc\n    };\n    settodos([...todos, mytodo]);\n    console.log(mytodo);\n  };\n\n  const [todos, settodos] = useState(initTodo);\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n  return (\n    /*#__PURE__*/\n    //<Section/>\n    _jsxDEV(\"div\", {\n      className: \"Learning\",\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          title: \"My todos List\",\n          searchbar: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Addtodo, {\n                addtodo: addtodo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 14\n              }, this), /*#__PURE__*/_jsxDEV(Todos, {\n                todo: todos,\n                delete: ondelete\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 14\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"7D+mv6zsuX6FIZqCb/LY9otVYIw=\");\n\n_c = App;\nexport default App;\n{\n  /*\r\n  <Router>\r\n         <Header title=\"My todos List\" searchbar={false} />\r\n       <Routes>\r\n  \n         <Route path=\"/\"element={\r\n             <>\r\n             <Addtodo addtodo={addtodo} />\r\n             <Todos todo={todos} delete={ondelete} /> \r\n             </>\r\n           }/>\r\n           <Route path=\"/about\" element={<About/>}/>\r\n  \n           </Routes>\r\n        \r\n         \r\n          <Footer />\r\n          \r\n         </Router>*/\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/Github/Tap-into-the-app/src/App.js"],"names":["Header","Footer","Todos","TodoItem","About","React","useEffect","useState","Addtodo","BrowserRouter","Routes","Route","App","initTodo","localStorage","getItem","JSON","parse","ondelete","todo","console","log","settodos","todos","filter","e","setItem","stringify","addtodo","title","desc","sno","length","mytodo"],"mappings":"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","sourcesContent":["\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Header from \"./header\";\r\nimport Footer from \"./Footer\";\r\nimport Todos from \"./Todos\";\r\nimport TodoItem from \"./Todoitem\";\r\nimport About from \"./About\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport Addtodo from \"./Addtodo\";\r\n\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  let initTodo;\r\n  if (localStorage.getItem(\"todos\") === null) {\r\n    initTodo = [];\r\n  } else {\r\n    initTodo = JSON.parse(localStorage.getItem(\"todos\"));\r\n  }\r\n  const ondelete = (todo) => {\r\n    console.log(\"I am getting deleted of todo\", todo);\r\n    // let idx=todos.indexOf(todo)\r\n    // todos.splice(idx,1);    //  in react splice doesn't work , dom will not get updated like this , to do this we have to use state hooks\r\n\r\n    settodos(\r\n      todos.filter((e) => {\r\n        return e !== todo;\r\n      })\r\n    );\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  };\r\n\r\n  const addtodo = (title, desc) => {\r\n    console.log(\"I am adding this todo\", title, desc);\r\n\r\n    let sno;\r\n    if (todos.length === 0) {\r\n      sno = 0;\r\n    } else {\r\n      sno = todos[todos.length - 1].sno + 1;\r\n    }\r\n\r\n    const mytodo = {\r\n      // for changing the newly entered title and desc , basically updating title and desc\r\n      sno: sno,\r\n      title: title,\r\n      desc: desc,\r\n    };\r\n    settodos([...todos, mytodo]);\r\n    console.log(mytodo);\r\n  };\r\n\r\n  const [todos, settodos] = useState(initTodo);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  return (\r\n    //<Section/>\r\n    \r\n    <div className=\"Learning\">\r\n      <BrowserRouter>\r\n      \r\n      <Header title=\"My todos List\" searchbar={false} />\r\n      \r\n      \r\n      <Routes>\r\n            <Route path=\"/\" element= \r\n            { <>\r\n             <Addtodo addtodo={addtodo} />\r\n             <Todos todo={todos} delete={ondelete} /> \r\n            </>\r\n            }/>\r\n           <Route path=\"/about\" element={<About/>}/> \r\n     </Routes>\r\n      <Footer />\r\n     \r\n      \r\n         \r\n\r\n      </BrowserRouter>  \r\n      \r\n    </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n{/*\r\n<Router>\r\n        <Header title=\"My todos List\" searchbar={false} />\r\n      <Routes>\r\n\r\n        <Route path=\"/\"element={\r\n            <>\r\n            <Addtodo addtodo={addtodo} />\r\n            <Todos todo={todos} delete={ondelete} /> \r\n            </>\r\n          }/>\r\n          <Route path=\"/about\" element={<About/>}/>\r\n\r\n          </Routes>\r\n       \r\n        \r\n         <Footer />\r\n         \r\n        </Router>*/}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"C:/Users/aksha/Documents/GitHub/Tap-into-the-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"C:/Users/aksha/Documents/GitHub/Tap-into-the-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import logo from\"./logo.svg\";import\"./App.css\";import\"bootstrap/dist/css/bootstrap.css\";import Header from\"./header\";import Footer from\"./Footer\";import Todos from\"./Todos\";import TodoItem from\"./Todoitem\";import About from\"./About\";import React,{useEffect,useState}from\"react\";import Addtodo from\"./Addtodo\";import{BrowserRouter,Routes,Route}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var initTodo;if(localStorage.getItem(\"todos\")===null){initTodo=[];}else{initTodo=JSON.parse(localStorage.getItem(\"todos\"));}var ondelete=function ondelete(todo){console.log(\"I am getting deleted of todo\",todo);// let idx=todos.indexOf(todo)\n// todos.splice(idx,1);    //  in react splice doesn't work , dom will not get updated like this , to do this we have to use state hooks\nsettodos(todos.filter(function(e){return e!==todo;}));localStorage.setItem(\"todos\",JSON.stringify(todos));};var addtodo=function addtodo(title,desc){console.log(\"I am adding this todo\",title,desc);var sno;if(todos.length===0){sno=0;}else{sno=todos[todos.length-1].sno+1;}var mytodo={// for changing the newly entered title and desc , basically updating title and desc\nsno:sno,title:title,desc:desc};settodos([].concat(_toConsumableArray(todos),[mytodo]));console.log(mytodo);};var _useState=useState(initTodo),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],settodos=_useState2[1];useEffect(function(){localStorage.setItem(\"todos\",JSON.stringify(todos));},[todos]);return/*#__PURE__*/ (//<Section/>\n_jsx(\"div\",{className:\"Learning\",children:/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsx(Header,{title:\"My todos List\",searchbar:false}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Addtodo,{addtodo:addtodo}),/*#__PURE__*/_jsx(Todos,{todo:todos,delete:ondelete})]})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{})})]}),/*#__PURE__*/_jsx(Footer,{})]})}));}export default App;{/*\r\n<Router>\r\n        <Header title=\"My todos List\" searchbar={false} />\r\n      <Routes>\r\n\r\n        <Route path=\"/\"element={\r\n            <>\r\n            <Addtodo addtodo={addtodo} />\r\n            <Todos todo={todos} delete={ondelete} /> \r\n            </>\r\n          }/>\r\n          <Route path=\"/about\" element={<About/>}/>\r\n\r\n          </Routes>\r\n       \r\n        \r\n         <Footer />\r\n         \r\n        </Router>*/}","map":{"version":3,"sources":["C:/Users/aksha/Documents/GitHub/Tap-into-the-app/src/App.js"],"names":["logo","Header","Footer","Todos","TodoItem","About","React","useEffect","useState","Addtodo","BrowserRouter","Routes","Route","App","initTodo","localStorage","getItem","JSON","parse","ondelete","todo","console","log","settodos","todos","filter","e","setItem","stringify","addtodo","title","desc","sno","length","mytodo"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Header from \"./header\";\r\nimport Footer from \"./Footer\";\r\nimport Todos from \"./Todos\";\r\nimport TodoItem from \"./Todoitem\";\r\nimport About from \"./About\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport Addtodo from \"./Addtodo\";\r\n\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  let initTodo;\r\n  if (localStorage.getItem(\"todos\") === null) {\r\n    initTodo = [];\r\n  } else {\r\n    initTodo = JSON.parse(localStorage.getItem(\"todos\"));\r\n  }\r\n  const ondelete = (todo) => {\r\n    console.log(\"I am getting deleted of todo\", todo);\r\n    // let idx=todos.indexOf(todo)\r\n    // todos.splice(idx,1);    //  in react splice doesn't work , dom will not get updated like this , to do this we have to use state hooks\r\n\r\n    settodos(\r\n      todos.filter((e) => {\r\n        return e !== todo;\r\n      })\r\n    );\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  };\r\n\r\n  const addtodo = (title, desc) => {\r\n    console.log(\"I am adding this todo\", title, desc);\r\n\r\n    let sno;\r\n    if (todos.length === 0) {\r\n      sno = 0;\r\n    } else {\r\n      sno = todos[todos.length - 1].sno + 1;\r\n    }\r\n\r\n    const mytodo = {\r\n      // for changing the newly entered title and desc , basically updating title and desc\r\n      sno: sno,\r\n      title: title,\r\n      desc: desc,\r\n    };\r\n    settodos([...todos, mytodo]);\r\n    console.log(mytodo);\r\n  };\r\n\r\n  const [todos, settodos] = useState(initTodo);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  return (\r\n    //<Section/>\r\n    \r\n    <div className=\"Learning\">\r\n      <BrowserRouter>\r\n      \r\n      <Header title=\"My todos List\" searchbar={false} />\r\n      \r\n      \r\n      <Routes>\r\n            <Route path=\"/\" element= \r\n            { <>\r\n             <Addtodo addtodo={addtodo} />\r\n             <Todos todo={todos} delete={ondelete} /> \r\n            </>\r\n            }/>\r\n           <Route path=\"/about\" element={<About/>}/> \r\n     </Routes>\r\n      <Footer />\r\n     \r\n      \r\n         \r\n\r\n      </BrowserRouter>  \r\n      \r\n    </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n{/*\r\n<Router>\r\n        <Header title=\"My todos List\" searchbar={false} />\r\n      <Routes>\r\n\r\n        <Route path=\"/\"element={\r\n            <>\r\n            <Addtodo addtodo={addtodo} />\r\n            <Todos todo={todos} delete={ondelete} /> \r\n            </>\r\n          }/>\r\n          <Route path=\"/about\" element={<About/>}/>\r\n\r\n          </Routes>\r\n       \r\n        \r\n         <Footer />\r\n         \r\n        </Router>*/}\r\n"]},"metadata":{},"sourceType":"module"}